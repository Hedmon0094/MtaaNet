// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that suggests optimal locations for hotspot deployment.
 *
 * - optimizeHotspotLocations - A function that handles the hotspot location optimization process.
 * - OptimizeHotspotLocationsInput - The input type for the optimizeHotspotLocations function.
 * - OptimizeHotspotLocationsOutput - The return type for the optimizeHotspotLocations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeHotspotLocationsInputSchema = z.object({
  populationDensityData: z
    .string()
    .describe('Data on population density in the target area.'),
  usagePatternsData: z
    .string()
    .describe('Data on current network usage patterns.'),
  networkCoverageData: z
    .string()
    .describe('Data on existing network coverage.'),
  existingHotspotLocations: z
    .string()
    .describe('A list of the data of existing hotspot locations.'),
});
export type OptimizeHotspotLocationsInput = z.infer<
  typeof OptimizeHotspotLocationsInputSchema
>;

const OptimizeHotspotLocationsOutputSchema = z.object({
  suggestedLocations: z
    .string()
    .describe(
      'A list of suggested optimal locations for new hotspot deployments.'
    ),
  reasoning: z
    .string()
    .describe(
      'The AIâ€™s reasoning for suggesting these locations, based on the input data.'
    ),
});
export type OptimizeHotspotLocationsOutput = z.infer<
  typeof OptimizeHotspotLocationsOutputSchema
>;

export async function optimizeHotspotLocations(
  input: OptimizeHotspotLocationsInput
): Promise<OptimizeHotspotLocationsOutput> {
  return optimizeHotspotLocationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeHotspotLocationsPrompt',
  input: {schema: OptimizeHotspotLocationsInputSchema},
  output: {schema: OptimizeHotspotLocationsOutputSchema},
  prompt: `You are an expert in telecommunications network optimization. Based on the provided data, suggest optimal locations for deploying new hotspots.  Consider population density, current usage patterns, existing network coverage, and current hotspot locations.

Population Density Data: {{{populationDensityData}}}
Usage Patterns Data: {{{usagePatternsData}}}
Network Coverage Data: {{{networkCoverageData}}}
Existing Hotspot Locations: {{{existingHotspotLocations}}}

Provide a list of suggested locations and a detailed explanation of your reasoning.`,
});

const optimizeHotspotLocationsFlow = ai.defineFlow(
  {
    name: 'optimizeHotspotLocationsFlow',
    inputSchema: OptimizeHotspotLocationsInputSchema,
    outputSchema: OptimizeHotspotLocationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
